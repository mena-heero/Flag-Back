# Generated by Django 4.1.3 on 2023-03-07 09:52

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import home.blocks
import wagtail.blocks
import wagtail.fields


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0078_referenceindex'),
        ('wagtailimages', '0024_index_image_file_hash'),
        ('home', '0021_alter_articledetailpage_body_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyDetail',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('og_keywords', models.CharField(blank=True, max_length=550, null=True, verbose_name='Og keywords')),
                ('account_open_link', models.URLField(blank=True, max_length=250, null=True, verbose_name='Account open link')),
                ('is_islamic', models.BooleanField(default=False, verbose_name='Is islamic account?')),
                ('rating', models.FloatField(default=0, verbose_name='Rating')),
                ('regulatory_body', models.CharField(blank=True, max_length=250, null=True, verbose_name='Regulatory bodies')),
                ('minimum_deposit', models.IntegerField(default=0, verbose_name='Minimum deposit')),
                ('main_branch', models.CharField(blank=True, max_length=150, null=True, verbose_name='Main branch')),
                ('customer_service', models.CharField(blank=True, max_length=150, null=True, verbose_name='Customer service')),
                ('demo_account', models.BooleanField(default=True, verbose_name='Demo account?')),
                ('trading_platforms', models.CharField(blank=True, max_length=250, null=True, verbose_name='Trading platforms')),
                ('overal_evaluation', models.FloatField(default=0, verbose_name='Overal evaluation')),
                ('regulation_rating', models.FloatField(default=0, verbose_name='Regulation rating')),
                ('deposit_withdraw_rating', models.FloatField(default=0, verbose_name='Deposit and withdraw ratings')),
                ('commissions_rating', models.FloatField(default=0, verbose_name='Commissions rating')),
                ('assets_rating', models.FloatField(default=0, verbose_name='Assets rating')),
                ('trading_platform_rating', models.FloatField(default=0, verbose_name='Trading platform ratings')),
                ('research_development_rating', models.FloatField(default=0, verbose_name='Research and development rating')),
                ('customer_service_rating', models.FloatField(default=0, verbose_name='Customer service rating')),
                ('mobile_app_trading_rating', models.FloatField(default=0, verbose_name='Mobile app trading rating')),
                ('learning_rating', models.FloatField(default=0, verbose_name='Learning rating')),
                ('experience_with_broker_rating', models.FloatField(default=0, verbose_name='Experience with broker rating')),
                ('trading_tools_rating', models.FloatField(default=0, verbose_name='Trading tools rating')),
                ('website_rating', models.FloatField(default=0, verbose_name='Website rating')),
                ('body', wagtail.fields.StreamField([('description', wagtail.blocks.StructBlock([('desc', home.blocks.RichTextBlock())])), ('button_block', wagtail.blocks.StructBlock([('link', wagtail.blocks.StreamBlock([('page', home.blocks.PageChooserBlock(max_num=1)), ('link', wagtail.blocks.URLBlock(max_num=1))])), ('label', wagtail.blocks.CharBlock())])), ('image_block', wagtail.blocks.StructBlock([('image', home.blocks.ImageChooserBlock(rendition_rules={'original': 'original|jpegquality-60|format-webp'}))])), ('banner', wagtail.blocks.StructBlock([('image', home.blocks.ImageChooserBlock(rendition_rules={'original': 'original|jpegquality-60|format-webp'})), ('link', wagtail.blocks.StreamBlock([('page', home.blocks.PageChooserBlock(max_num=1)), ('link', wagtail.blocks.URLBlock(max_num=1))]))]))], blank=True, null=True, use_json_field=True)),
                ('company_slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=['title'])),
                ('creation_time', models.DateTimeField(auto_now_add=True, verbose_name='Creation time')),
                ('logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('og_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('thumbnail_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
